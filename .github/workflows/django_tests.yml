name: Django

on: 
  push:
    branches:
      - main
      - github_actions
  pull_request:
    branches:
      - main

jobs:
  django:
    name: Django
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myusername
          POSTGRES_PASSWORD: mypassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      ENV: development
      SECRET_KEY: test-secret-key
      GLOBUS_APPLICATION_ID: test-globus-application-id
      GLOBUS_APPLICATION_SECRET: test-globus-application-secret
      AUTHORIZED_IDPS: '{"mock_domain.com": "mock_idp_id"}'
      RUNNING_AUTOMATED_TEST_SUITE: True
      WORKING_DIRECTORY: './'
      PGHOST: localhost
      PGUSER: myusername
      PGPASSWORD: mypassword
      PGDATABASE: mydatabase
      PGPORT: 5432
      REDIS_URL: "redis://localhost:6379/0"
      STREAMING_SERVER_HOST: "localhost:8080"
      INTERNAL_STREAMING_SECRET: "test-streaming-secret-key"

    steps:
      - name: Clone current GitHub repository
        uses: actions/checkout@v2

      - name: Debug - Show current branch
        run: |
          echo "Current branch: $(git branch --show-current)"

      - name: Check Python syntax
        uses: cclauss/Find-Python-syntax-errors-action@v0.2.0

      - name: Install Python 3.12.6
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup Django environment
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          poetry config virtualenvs.create false --local
          poetry lock
          poetry install
          mkdir logs/
          python3 manage.py migrate
          python3 manage.py loaddata fixtures/endpoints.json
      
      - name: Run Django tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          python3 -m pip install --upgrade pip
          pip install coverage
          coverage run manage.py test
          coverage report
