# Generated by Django 5.2.6 on 2025-09-15 23:27

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp_request", models.DateTimeField(null=True)),
                ("timestamp_response", models.DateTimeField(null=True)),
                ("api_route", models.CharField(max_length=256)),
                ("origin_ip", models.CharField(max_length=250)),
                ("status_code", models.IntegerField()),
                ("error", models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=100)),
                ("username", models.CharField(max_length=100)),
                ("idp_id", models.CharField(blank=True, default="", max_length=100)),
                ("idp_name", models.CharField(max_length=100)),
                (
                    "auth_service",
                    models.CharField(
                        choices=[("globus", "Globus")], default="globus", max_length=100
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BatchLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("input_file", models.CharField(max_length=500)),
                ("output_folder_path", models.CharField(blank=True, max_length=500)),
                ("cluster", models.CharField(max_length=100)),
                ("framework", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=250)),
                ("globus_batch_uuid", models.CharField(max_length=100)),
                ("globus_task_uuids", models.TextField(null=True)),
                ("result", models.TextField(blank=True)),
                ("status", models.CharField(default="pending", max_length=250)),
                ("in_progress_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "access_log",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="batch_log",
                        to="resource_server_async.accesslog",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cluster", models.CharField(max_length=100)),
                ("framework", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
                ("openai_endpoint", models.CharField(max_length=100)),
                ("timestamp_compute_request", models.DateTimeField()),
                ("timestamp_compute_response", models.DateTimeField()),
                ("prompt", models.TextField(null=True)),
                ("result", models.TextField(null=True)),
                ("task_uuid", models.CharField(max_length=100, null=True)),
                (
                    "access_log",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="request_log",
                        to="resource_server_async.accesslog",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="accesslog",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="access_logs",
                to="resource_server_async.user",
            ),
        ),
    ]
