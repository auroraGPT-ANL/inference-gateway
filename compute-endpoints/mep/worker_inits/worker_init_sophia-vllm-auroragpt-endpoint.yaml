{% raw -%}
    worker_init: |
      # single_model_launch.sh
      # Source the common script
      source /home/openinference_svc/sophia_common_scripts.sh   # Replace with the actual path to common.sh
      # Setup the environment
      setup_environment
      # Define model parameters
      framework="vllm"
      cluster="sophia"
      
      model_name_1="auroragpt/auroragpt-0.1-chkpt-7B-Base"
      model_command_1="CUDA_VISIBLE_DEVICES=0,1 vllm serve /eagle/argonne_tpc/global_step93500_hf/ --served-model-name ${model_name_1} --host 127.0.0.1 --port 8181 \
      --tensor-parallel-size 2 --gpu-memory-utilization 0.99 \
      --disable-log-requests  --tokenizer meta-llama/Llama-2-7B-hf --chat-template /eagle/argonne_tpc/model_weights/chat-templates/template_llama3.jinja \
      --multi-step-stream-outputs False  --disable-log-stats --enable-chunked-prefill --trust-remote-code \
      --ssl-keyfile ~/certificates/mykey.key --ssl-certfile ~/certificates/mycert.crt"
      logfile_1="$PWD/logfile_sophia_vllm_${model_name_1}_$(hostname).log"

      model_name_2="auroragpt/auroragpt-0.1-chkpt-7B-IT"
      model_name_3="auroragpt/auroragpt-0.1-chkpt-7B-DPO"
      model_name_4="auroragpt/auroragpt-0.1-chkpt-7B-KTO"
      model_command_2="CUDA_VISIBLE_DEVICES=2,3,4,5 vllm serve /lus/eagle/projects/argonne_tpc/azton/cpt-it-accel/BriarRose-it-v4_auroragpt_158945/checkpoint-2550 --served-model-name ${model_name_2} --host 127.0.0.1 --port 8182 \
      --tensor-parallel-size 4 --gpu-memory-utilization 0.99 \
      --disable-log-requests  --enable-lora --lora-modules ${model_name_3}=/lus/eagle/projects/argonne_tpc/deema/align-pipeline/models/DPO2_lr1/checkpoint-2550_ultrafeedback/checkpoint-950 \
      ${model_name_4}=/lus/eagle/projects/argonne_tpc/deema/align-pipeline/models/KTO2_lr1/checkpoint-2550_ultrafeedback/checkpoint-1902  \
      --multi-step-stream-outputs False  --disable-log-stats --trust-remote-code --enforce-eager \
      --ssl-keyfile ~/certificates/mykey.key --ssl-certfile ~/certificates/mycert.crt"
      logfile_2="$PWD/logfile_sophia_vllm_${model_name_2}_DPO_KTO_$(hostname).log"
      

      # Initialize retry counters for each model
      retry_counter_model_1=0
      retry_counter_model_2=0

      # Loop to start models and restart if any model fails
      while true; do
          echo "Starting models sequence..."

          # Start first model
          if ! start_model "$model_name_1" "$model_command_1" "$logfile_1" retry_counter_model_1; then
              continue  # Restart from the beginning if this fails
          fi
          # Start second model
          if ! start_model "$model_name_2" "$model_command_2" "$logfile_2" retry_counter_model_2; then
              continue  # Restart from the beginning if this fails
          fi
          echo "All models started successfully."
          break  # Exit the loop if all models start successfully
      done
{% endraw %}