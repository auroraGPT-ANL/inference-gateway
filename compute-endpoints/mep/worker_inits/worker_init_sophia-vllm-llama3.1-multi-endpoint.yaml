{% raw -%}
    worker_init: |
      # Source the common script
      source /home/openinference_svc/sophia_common_scripts.sh
      # Setup the environment
      setup_environment
      # Define model parameters
      model_name_1="meta-llama/Meta-Llama-3.1-70B-Instruct"
      framework="vllm"
      cluster="sophia"
      model_command_1="CUDA_VISIBLE_DEVICES=0,1,2,3 vllm serve ${model_name_1} --host 127.0.0.1 --port 8000 \
      --tensor-parallel-size 4 --gpu-memory-utilization 0.99 \
      --enable-auto-tool-choice --tool-call-parser llama3_json --chat-template /eagle/argonne_tpc/model_weights/chat-templates/tool_chat_template_llama3.1_json.jinja \
      --disable-log-stats  --max-model-len 8192 --multi-step-stream-outputs False --max-num-seqs 8  \
      --disable-log-requests --ssl-keyfile ~/certificates/mykey.key --ssl-certfile ~/certificates/mycert.crt"
      logfile_1="$PWD/logfile_sophia-vllm-${model_name_1}_$(hostname).log"

      model_name_2="meta-llama/Meta-Llama-3.1-8B-Instruct"
      model_command_2="CUDA_VISIBLE_DEVICES=4,5,6,7 vllm serve ${model_name_2} --host 127.0.0.1 --port 8001 \
      --tensor-parallel-size 4 --gpu-memory-utilization 0.95 \
      --disable-log-stats  --enable-chunked-prefill  --multi-step-stream-outputs False \
      --disable-log-requests --ssl-keyfile ~/certificates/mykey.key --ssl-certfile ~/certificates/mycert.crt"
      logfile_2="$PWD/logfile_sophia-vllm-${model_name_2}_$(hostname).log"
    
      # Initialize retry counters for each model
      retry_counter_model_1=0
      retry_counter_model_2=0

      # Loop to start models and restart if any model fails
      while true; do
          echo "Starting models sequence..."
          # Start first model
          if ! start_model "$model_name_1" "$model_command_1" "$logfile_1" retry_counter_model_1; then
              continue  # Restart from the beginning if this fails
          fi    

          # Start second model  
          if ! start_model "$model_name_2" "$model_command_2" "$logfile_2" retry_counter_model_2; then
              continue  # Restart from the beginning if this fails
          fi
          echo "All models started successfully."
          break  # Exit the loop if all models start successfully
      done
{% endraw %}